{"ast":null,"code":"var _jsxFileName = \"/home/limi/Documents/fullstackopen/osa1/anekdootit/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst Header = _ref2 => {\n  let {\n    name\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Header;\n\nconst Anecdote = _ref3 => {\n  let {\n    anecdote,\n    votes\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: anecdote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"has \", votes, \" votes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Anecdote;\n\nconst App = () => {\n  _s();\n\n  const anecdotes = ['If it hurts, do it more often', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'];\n  const [selected, setSelected] = useState(0);\n  const [votes, setVotes] = useState(new Uint8Array(anecdotes.length));\n  const mostVoted = votes.indexOf(Math.max(...votes));\n\n  const changeSelected = () => {\n    setSelected(Math.floor(Math.random() * anecdotes.length));\n  };\n\n  const voteThis = () => {\n    const copy = [...votes];\n    copy[selected] += 1;\n    setVotes(copy);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: \"Anecdote of the day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Anecdote, {\n      anecdote: anecdotes[selected],\n      votes: votes[selected]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => voteThis(),\n      text: \"vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => changeSelected(),\n      text: \"next anecdote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      name: \"Anecdote with most votes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Anecdote, {\n      anecdote: anecdotes[mostVoted],\n      votes: votes[mostVoted]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"68QTgBKKc/Mnv8e9MM3PTqFd5BI=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Anecdote\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/limi/Documents/fullstackopen/osa1/anekdootit/src/App.js"],"names":["React","useState","Button","handleClick","text","Header","name","Anecdote","anecdote","votes","App","anecdotes","selected","setSelected","setVotes","Uint8Array","length","mostVoted","indexOf","Math","max","changeSelected","floor","random","voteThis","copy"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,MAAM,GAAG;AAAA,MAAC;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAAD;AAAA,sBACb;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAAA,cACGC;AADH;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,CAAf;;KAAMF,M;;AAMN,MAAMG,MAAM,GAAG,SAAY;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACzB,sBACE;AAAA,2BACE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAND;;MAAMD,M;;AAQN,MAAME,QAAQ,GAAG,SAAuB;AAAA,MAAtB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAsB;AACtC,sBACE;AAAA,4BACE;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,yBACOC,KADP;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAUD,CAXD;;MAAMF,Q;;AAaN,MAAMG,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,SAAS,GAAG,CAChB,+BADgB,EAEhB,4DAFgB,EAGhB,8LAHgB,EAIhB,iHAJgB,EAKhB,iDALgB,EAMhB,oLANgB,CAAlB;AASA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQK,QAAR,IAAoBb,QAAQ,CAAC,IAAIc,UAAJ,CAAeJ,SAAS,CAACK,MAAzB,CAAD,CAAlC;AAEA,QAAMC,SAAS,GAAGR,KAAK,CAACS,OAAN,CAAcC,IAAI,CAACC,GAAL,CAAS,GAAGX,KAAZ,CAAd,CAAlB;;AAEA,QAAMY,cAAc,GAAG,MAAM;AAC3BR,IAAAA,WAAW,CAACM,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,KAAgBZ,SAAS,CAACK,MAArC,CAAD,CAAX;AACD,GAFD;;AAIA,QAAMQ,QAAQ,GAAG,MAAM;AACrB,UAAMC,IAAI,GAAG,CAAC,GAAGhB,KAAJ,CAAb;AACAgB,IAAAA,IAAI,CAACb,QAAD,CAAJ,IAAkB,CAAlB;AACAE,IAAAA,QAAQ,CAACW,IAAD,CAAR;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEd,SAAS,CAACC,QAAD,CAA7B;AAAyC,MAAA,KAAK,EAAEH,KAAK,CAACG,QAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMY,QAAQ,EAAnC;AAAuC,MAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,MAAMH,cAAc,EAAzC;AAA6C,MAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEV,SAAS,CAACM,SAAD,CAA7B;AAA0C,MAAA,KAAK,EAAER,KAAK,CAACQ,SAAD;AAAtD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnCD;;GAAMP,G;;MAAAA,G;AAqCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Header = ({name}) => {\n  return(\n    <>\n      <h1>{name}</h1>\n    </>\n  )\n}\n\nconst Anecdote = ({anecdote, votes}) => {\n  return(\n    <>\n      <p>\n        {anecdote}\n      </p>\n      <p>\n        has {votes} votes\n      </p>\n    </>\n  )\n}\n\nconst App = () => {\n  const anecdotes = [\n    'If it hurts, do it more often',\n    'Adding manpower to a late software project makes it later!',\n    'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    'Premature optimization is the root of all evil.',\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n  ]\n\n  const [selected, setSelected] = useState(0)\n  const [votes, setVotes] = useState(new Uint8Array(anecdotes.length))\n  \n  const mostVoted = votes.indexOf(Math.max(...votes))\n\n  const changeSelected = () => {\n    setSelected(Math.floor(Math.random() * anecdotes.length))\n  }\n\n  const voteThis = () => {\n    const copy = [...votes]\n    copy[selected] += 1\n    setVotes(copy)\n  }\n\n  return (\n    <div>\n      <Header name = 'Anecdote of the day' />\n      <Anecdote anecdote={anecdotes[selected]} votes={votes[selected]} />\n      <Button handleClick={() => voteThis()} text=\"vote\" />\n      <Button handleClick={() => changeSelected()} text=\"next anecdote\" />\n      <Header name = 'Anecdote with most votes' />\n      <Anecdote anecdote={anecdotes[mostVoted]} votes={votes[mostVoted]} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}