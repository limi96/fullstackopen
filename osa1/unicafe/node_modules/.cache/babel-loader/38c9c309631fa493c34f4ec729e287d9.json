{"ast":null,"code":"var _jsxFileName = \"/home/limi/Documents/fullstackopen/osa1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", props.good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", props.neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", props.bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", props.good + props.neutral + props.bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", (good - bad) / (good + neutral + bad)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", good / (good + neutral + bad) * 100, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Statistics;\n\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: [\" \", text, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst giveScore = (score, setIncrement) => () => {\n  setIncrement(score + 1);\n};\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" give feedback \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: giveScore(good, setGood)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: giveScore(neutral, setNeutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: giveScore(bad, setBad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/limi/Documents/fullstackopen/osa1/unicafe/src/App.js"],"names":["React","useState","Statistics","props","good","neutral","bad","Button","handleClick","text","giveScore","score","setIncrement","App","setGood","setNeutral","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B;AAAA;AAAA,4BACE;AAAA,0BAASA,KAAK,CAACC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAAYD,KAAK,CAACE,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,yBAAQF,KAAK,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,yBAAQH,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACE,OAAnB,GAA6BF,KAAK,CAACG,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,yBAAQ,CAACF,IAAI,GAACE,GAAN,KAAYF,IAAI,GAAGC,OAAP,GAAiBC,GAA7B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,8BAAcF,IAAD,IAAQA,IAAI,GAAGC,OAAP,GAAiBC,GAAzB,IAA8B,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAQD,CATD;;KAAMJ,U;;AAWN,MAAMK,MAAM,GAAG;AAAA,MAAC;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAAD;AAAA,sBACb;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAAA,oBAAgCC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,CAAf;;MAAMF,M;;AAIN,MAAMG,SAAS,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB,MAAM;AAC7CA,EAAAA,YAAY,CAACD,KAAK,GAAC,CAAP,CAAZ;AACH,CAFD;;AAIA,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACT,IAAD,EAAOU,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUU,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,GAAD,EAAMU,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAuB,MAAA,WAAW,EAAES,SAAS,CAACN,IAAD,EAAUU,OAAV;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,WAAW,EAAEJ,SAAS,CAACL,OAAD,EAAUU,UAAV;AAA7C;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAuB,MAAA,WAAW,EAAEL,SAAS,CAACJ,GAAD,EAAUU,MAAV;AAA7C;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBD;;GAAMH,G;;MAAAA,G;AAmBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Statistics = (props) => {\n  <div>\n    <p>good {props.good}</p>  \n    <p>neutral {props.neutral}</p>  \n    <p>bad {props.bad}</p>  \n    <p>all {props.good + props.neutral + props.bad}</p>\n    <p>all {(good-bad)/(good + neutral + bad)}</p>\n    <p>positive {(good)/(good + neutral + bad)*100} %</p>\n  </div>\n}\n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}> {text} </button>\n)\n\nconst giveScore = (score, setIncrement) => () => {\n    setIncrement(score+1)\n}\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1> give feedback </h1>\n    <Button text=\"good\"    handleClick={giveScore(good,    setGood    )}     />    \n    <Button text=\"neutral\" handleClick={giveScore(neutral, setNeutral )}     />\n    <Button text=\"bad\"     handleClick={giveScore(bad,     setBad     )}     />    \n\n\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}