{"ast":null,"code":"var _jsxFileName = \"/home/limi/Documents/fullstackopen/osa1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref;\n  const sum = good + neutral + bad;\n\n  if (sum === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", (good - bad) / (good + neutral + bad)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", good / (good + neutral + bad) * 100, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Statistics;\n\nconst Button = _ref2 => {\n  let {\n    handleClick,\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: [\" \", text, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst giveScore = (score, setIncrement) => () => {\n  setIncrement(score + 1);\n};\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" give feedback \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: giveScore(good, setGood)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: giveScore(neutral, setNeutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: giveScore(bad, setBad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/limi/Documents/fullstackopen/osa1/unicafe/src/App.js"],"names":["React","useState","Statistics","good","neutral","bad","sum","Button","handleClick","text","giveScore","score","setIncrement","App","setGood","setNeutral","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,QAA0B;AAAA,MAAzB;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAyB;AAC3C,QAAMC,GAAG,GAAGH,IAAI,GAAGC,OAAP,GAAiBC,GAA7B;;AAEA,MAAIC,GAAG,KAAK,CAAZ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,0BAASH,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,6BAAYC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,yBAAQC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,yBAAQF,IAAI,GAAGC,OAAP,GAAiBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,yBAAQ,CAACF,IAAI,GAACE,GAAN,KAAYF,IAAI,GAAGC,OAAP,GAAiBC,GAA7B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,8BAAcF,IAAD,IAAQA,IAAI,GAAGC,OAAP,GAAiBC,GAAzB,IAA8B,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAYD,CAnBD;;KAAMH,U;;AAqBN,MAAMK,MAAM,GAAG;AAAA,MAAC;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAAD;AAAA,sBACb;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAAA,oBAAgCC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,UADa;AAAA,CAAf;;MAAMF,M;;AAIN,MAAMG,SAAS,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB,MAAM;AAC7CA,EAAAA,YAAY,CAACD,KAAK,GAAC,CAAP,CAAZ;AACH,CAFD;;AAIA,MAAME,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACV,IAAD,EAAOW,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACG,OAAD,EAAUW,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACI,GAAD,EAAMW,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAuB,MAAA,WAAW,EAAES,SAAS,CAACP,IAAD,EAAUW,OAAV;AAA7C;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,WAAW,EAAEJ,SAAS,CAACN,OAAD,EAAUW,UAAV;AAA7C;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,KAAb;AAAuB,MAAA,WAAW,EAAEL,SAAS,CAACL,GAAD,EAAUW,MAAV;AAA7C;AAAA;AAAA;AAAA;AAAA,YAJA,eAMA,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEb,IAAlB;AAAwB,MAAA,OAAO,EAAIC,OAAnC;AAA4C,MAAA,GAAG,EAAIC;AAAnD;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjBD;;GAAMQ,G;;MAAAA,G;AAmBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nconst Statistics = ({good, neutral, bad}) => {\n  const sum = good + neutral + bad\n\n  if (sum === 0) {\n    return <p>No feedback given</p>\n  }\n  \n  return(\n  <div>\n    <h1>statistics </h1>\n\n    <p>good {good}</p>  \n    <p>neutral {neutral}</p>  \n    <p>bad {bad}</p>  \n    <p>all {good + neutral + bad}</p>\n    <p>all {(good-bad)/(good + neutral + bad)}</p>\n    <p>positive {(good)/(good + neutral + bad)*100} %</p>\n  </div>\n  )\n}\n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}> {text} </button>\n)\n\nconst giveScore = (score, setIncrement) => () => {\n    setIncrement(score+1)\n}\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1> give feedback </h1>\n    <Button text=\"good\"    handleClick={giveScore(good,    setGood    )}     />    \n    <Button text=\"neutral\" handleClick={giveScore(neutral, setNeutral )}     />\n    <Button text=\"bad\"     handleClick={giveScore(bad,     setBad     )}     />    \n\n    <Statistics good={good} neutral = {neutral} bad = {bad} />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}