{"ast":null,"code":"var _jsxFileName = \"/home/limi/Documents/fullstackopen/osa1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [\" \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c = StatisticLine;\n\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  const sum = good + neutral + bad;\n  const average = (good - bad) / sum;\n  const positive = good / sum * 100;\n\n  if (sum === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'good',\n          value: good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'neutral',\n          value: neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'bad',\n          value: bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'all',\n          value: sum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'average',\n          value: average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: 'positive',\n          value: positive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Statistics;\n\nconst Button = _ref3 => {\n  let {\n    handleClick,\n    text\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: [\" \", text, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Button;\n\nconst giveScore = (score, setIncrement) => () => {\n  setIncrement(score + 1);\n};\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" give feedback \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: giveScore(good, setGood)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: giveScore(neutral, setNeutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: giveScore(bad, setBad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/limi/Documents/fullstackopen/osa1/unicafe/src/App.js"],"names":["React","useState","StatisticLine","text","value","Statistics","good","neutral","bad","sum","average","positive","Button","handleClick","giveScore","score","setIncrement","App","setGood","setNeutral","setBad"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\n\nconst StatisticLine = ({text, value}) => {\n  return (\n  <tr>\n    <td> {text}</td>\n    <td> {value}</td>\n  </tr>\n  )\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n  const sum = good + neutral + bad\n  const average = (good-bad)/sum\n  const positive = (good)/(sum)*100\n\n  if (sum === 0) {\n    return <p>No feedback given</p>\n  }\n  \n  return(\n  <div>\n    <h1>statistics </h1>\n    <table>\n    <tbody>\n      \n        <StatisticLine text={'good'}      value={good} />\n        <StatisticLine text={'neutral'}   value={neutral} />    \n        <StatisticLine text={'bad'}       value={bad} />\n        <StatisticLine text={'all'}       value={sum} />\n        <StatisticLine text={'average'}   value={average} />\n        <StatisticLine text={'positive'}  value={positive} />\n      \n    </tbody>\n    </table>\n  </div>\n  )\n}\n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}> {text} </button>\n)\n\nconst giveScore = (score, setIncrement) => () => {\n    setIncrement(score+1)\n}\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1> give feedback </h1>\n    <Button text=\"good\"    handleClick={giveScore(good,    setGood    )}     />    \n    <Button text=\"neutral\" handleClick={giveScore(neutral, setNeutral )}     />\n    <Button text=\"bad\"     handleClick={giveScore(bad,     setBad     )}     />    \n\n    <Statistics good={good} neutral = {neutral} bad = {bad} />\n\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}